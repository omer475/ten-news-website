name: Generate Daily News
on:
  schedule:
    - cron: '*/1 * * * *'  # Run every minute; guarded to execute only at 07:00 Europe/London
  workflow_dispatch:  # Manual trigger for testing

jobs:
  generate-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TARGET_TZ: Europe/Istanbul   # TEMP for testing; switch back to Europe/London after test
      TARGET_HOUR: '14'            # TEMP test target hour (TRT)
      TARGET_MINUTE: '00'          # TEMP test target minute (TRT)
      WINDOW_MINUTES: '5'          # Allow small queue delay window
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # fetch full history to allow rebase before push
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: |
          pip install requests beautifulsoup4 pytz schedule
          
      - name: Generate daily news
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          python -c "
          import sys
          import subprocess
          import datetime
          import pytz
          import os
          from pathlib import Path
          
          # Timezone-aware guard: run ONLY around 07:00 Europe/London (0-4 min window)
          # ALWAYS run when triggered manually (workflow_dispatch)
          event = os.getenv('GITHUB_EVENT_NAME')
          target_tz = os.getenv('TARGET_TZ', 'Europe/London')
          target_hour = int(os.getenv('TARGET_HOUR', '7'))
          target_minute = int(os.getenv('TARGET_MINUTE', '0'))
          window_minutes = int(os.getenv('WINDOW_MINUTES', '5'))

          tz = pytz.timezone(target_tz)
          now = datetime.datetime.now(tz)
          print('📅 Current time ({}):'.format(target_tz), now.strftime('%Y-%m-%d %H:%M %Z'))
          if event != 'workflow_dispatch':
              in_window = (now.hour == target_hour and target_minute <= now.minute < target_minute + window_minutes)
              if not in_window:
                  print('⏭ Skipping scheduled run outside {:02d}:{:02d}-{:02d}:{:02d} window ({})'.format(
                      target_hour, target_minute,
                      target_hour, (target_minute + window_minutes - 1),
                      target_tz
                  ))
                  sys.exit(0)

          # Run once per day safeguard: skip if today's file exists
          today_name = now.strftime('tennews_data_%Y_%m_%d.json')
          if event != 'workflow_dispatch':
              if Path(today_name).exists():
                  print('⏭ Skipping: {} already exists. Run has likely completed today.'.format(today_name))
                  sys.exit(0)

          print('🤖 Starting automated news generation...')
          
          # Run the news generator directly
          result = subprocess.run([sys.executable, 'news-generator.py'], 
                                input='1\n', text=True, capture_output=True)
          
          print('STDOUT:', result.stdout)
          if result.stderr:
              print('STDERR:', result.stderr)
          
          if result.returncode == 0:
              print('✅ News generation completed successfully!')
              sys.exit(0)
          else:
              print('❌ News generation failed!')
              sys.exit(1)
          "
          
      - name: Commit and push generated news
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          # Make sure we are up to date before committing/pushing
          git fetch origin main
          git pull --rebase origin main || true
          
          # Add generated JSON files and processing logs
          git add tennews_data_*.json processing_log_*.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🗞️ Daily news update $(date +'%Y-%m-%d %H:%M UTC')"
            git push origin HEAD:main
          fi
