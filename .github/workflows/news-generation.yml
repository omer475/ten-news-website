name: Generate Daily News
on:
  schedule:
    - cron: '*/1 * * * *'  # Run every minute; guarded to execute only at 07:00 Europe/London
  workflow_dispatch:  # Manual trigger for testing

jobs:
  generate-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # fetch full history to allow rebase before push
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: |
          pip install requests beautifulsoup4 pytz schedule
          
      - name: Generate daily news
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          python -c "
          import sys
          import subprocess
          import datetime
          import pytz
          import os
          
          # Timezone-aware guard: run ONLY at exactly 07:00 Europe/London,
          # but ALWAYS run when triggered manually (workflow_dispatch)
          if os.getenv('GITHUB_EVENT_NAME') != 'workflow_dispatch':
              tz = pytz.timezone('Europe/London')
              now = datetime.datetime.now(tz)
              if not (now.hour == 7 and now.minute == 0):
                  print('‚è≠ Skipping run at {} ; waiting for 07:00 Europe/London'.format(now.strftime('%Y-%m-%d %H:%M %Z')))
                  sys.exit(0)

          print('ü§ñ Starting automated news generation...')
          
          # Run the news generator directly
          result = subprocess.run([sys.executable, 'news-generator.py'], 
                                input='1\n', text=True, capture_output=True)
          
          print('STDOUT:', result.stdout)
          if result.stderr:
              print('STDERR:', result.stderr)
          
          if result.returncode == 0:
              print('‚úÖ News generation completed successfully!')
              sys.exit(0)
          else:
              print('‚ùå News generation failed!')
              sys.exit(1)
          "
          
      - name: Commit and push generated news
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          # Make sure we are up to date before committing/pushing
          git fetch origin main
          git pull --rebase origin main || true
          
          # Add generated JSON files and processing logs
          git add tennews_data_*.json processing_log_*.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üóûÔ∏è Daily news update $(date +'%Y-%m-%d %H:%M UTC')"
            git push origin HEAD:main
          fi
